- block:
    - name: Get ALB info(ALB 정보 추출)
      community.aws.elb_application_lb_info:
        names: ["{{ alb_name }}"]
        region: "{{ region }}"
      register: alb_info

    - name: Route53 Hosted Zone ID 조회 (CLI 사용)
      ansible.builtin.shell: >
        aws route53 list-hosted-zones-by-name
        --dns-name "{{ route53_zone }}"
        --query "HostedZones[0].Id"
        --output text
      register: hosted_zone_id_raw

    - name: Hosted Zone ID 정제 (/hostedzone/ 접두사 제거)
      set_fact:
        route53_zone_id: "{{ hosted_zone_id_raw.stdout | regex_replace('^/hostedzone/', '') }}"

    - name: ALB 리스너 정보 조회 (포트 80)
      shell: >
        aws elbv2 describe-listeners \
        --load-balancer-arn $(aws elbv2 describe-load-balancers --names {{ alb_name }} --query 'LoadBalancers[0].LoadBalancerArn' --output text --region {{ region }}) \
        --query 'Listeners[?Port==`80`].ListenerArn' --output text --region {{ region }}
      register: listener_arn_result

    - name: 리스너 ARN 저장
      set_fact:
        listener_arn: "{{ listener_arn_result.stdout }}"

    - name: Jenkins 도메인용 리스너 룰 생성
      shell: >
        aws elbv2 create-rule \
        --listener-arn {{ listener_arn }} \
        --priority 1 \
        --conditions Field=host-header,Values=project3.jenkins.{{ route53_zone | regex_replace('\.$', '') }} \
        --actions Type=forward,TargetGroupArn=$(aws elbv2 describe-target-groups --names project3-jenkins-tg --query 'TargetGroups[0].TargetGroupArn' --output text --region {{ region }}) \
        --region {{ region }}
      register: jenkins_rule_result
      ignore_errors: true

    - name: PetClinic 도메인용 리스너 룰 생성
      shell: >
        aws elbv2 create-rule \
        --listener-arn {{ listener_arn }} \
        --priority 2 \
        --conditions Field=host-header,Values=project3.petclinic.{{ route53_zone | regex_replace('\.$', '') }} \
        --actions Type=forward,TargetGroupArn=$(aws elbv2 describe-target-groups --names project3-petclinic-tg --query 'TargetGroups[0].TargetGroupArn' --output text --region {{ region }}) \
        --region {{ region }}
      register: petclinic_rule_result
      ignore_errors: true

    - name: Jenkins 도메인용 Alias A 레코드 생성 JSON 템플릿 렌더링
      ansible.builtin.template:
        src: jenkins-alias.json.j2
        dest: "{{ playbook_dir }}/jenkins_alias.json"

    - name: Jenkins Alias A 레코드 생성
      ansible.builtin.command: >
        aws route53 change-resource-record-sets \
        --hosted-zone-id {{ route53_zone_id }} \
        --change-batch file://{{ playbook_dir }}/jenkins_alias.json

    - name: PetClinic 도메인용 Alias A 레코드 생성 JSON 템플릿 렌더링
      ansible.builtin.template:
        src: petclinic-alias.json.j2
        dest: "{{ playbook_dir }}/petclinic_alias.json"

    - name: PetClinic Alias A 레코드 생성
      ansible.builtin.command: >
        aws route53 change-resource-record-sets \
        --hosted-zone-id {{ route53_zone_id }} \
        --change-batch file://{{ playbook_dir }}/petclinic_alias.json

  when: alias_state == "present"

- block:
    - name: ALB 리스너 정보 조회
      shell: >
        aws elbv2 describe-listeners \
        --load-balancer-arn $(aws elbv2 describe-load-balancers --names {{ alb_name }} \
        --query 'LoadBalancers[0].LoadBalancerArn' --output text --region {{ region }}) \
        --query 'Listeners[?Port==`80`].ListenerArn' --output text --region {{ region }}
      register: listener_arn_result

    - name: 리스너 룰 목록 조회
      shell: >
        aws elbv2 describe-rules \
        --listener-arn {{ listener_arn_result.stdout }} \
        --region {{ region }} \
        --query 'Rules[*].{Arn:RuleArn, Conditions:Conditions}' \
        --output text
      register: listener_rules_result

    - name: 리스너 룰 디버그 출력
      debug:
        var: listener_rules_result.stdout_lines

    - name: 삭제할 모든 룰 ARN 추출
      set_fact:
        all_rule_arns: "{{ listener_rules_result.stdout_lines | select('match', '^arn:aws:elasticloadbalancing:.*:listener-rule/.*') | list }}"

    - name: 삭제 대상 룰 ARN 디버깅
      debug:
        var: all_rule_arns

    - name: 모든 리스너 룰 삭제
      shell: >
        aws elbv2 delete-rule --rule-arn {{ item }} --region {{ region }}
      loop: "{{ all_rule_arns }}"
      ignore_errors: true

    - name: Jenkins Alias A 레코드 삭제용 JSON 템플릿 렌더링
      ansible.builtin.template:
        src: jenkins-alias-delete.json.j2
        dest: "{{ playbook_dir }}/jenkins_alias_delete.json"

    - name: Jenkins Alias A 레코드 삭제
      ansible.builtin.command: >
        aws route53 change-resource-record-sets \
        --hosted-zone-id {{ route53_zone_id }} \
        --change-batch file://{{ playbook_dir }}/jenkins_alias_delete.json

    - name: PetClinic Alias A 레코드 삭제용 JSON 템플릿 렌더링
      ansible.builtin.template:
        src: petclinic-alias-delete.json.j2
        dest: "{{ playbook_dir }}/petclinic_alias_delete.json"

    - name: PetClinic Alias A 레코드 삭제
      ansible.builtin.command: >
        aws route53 change-resource-record-sets \
        --hosted-zone-id {{ route53_zone_id }} \
        --change-batch file://{{ playbook_dir }}/petclinic_alias_delete.json
  when: alias_state == "absent"
