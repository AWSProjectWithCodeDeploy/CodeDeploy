---
- name: Get VPC info
  amazon.aws.ec2_vpc_net_info:
    region: "{{ region }}"
    filters:
      "tag:Name": project3-vpc
  register: vpc_info
  when: ec2_instance_state == "present"

- name: Check VPC info after creation or before deletion
  amazon.aws.ec2_vpc_subnet_info:
    region: "{{ region }}"
    filters:
      "tag:Name": project3-public-2a
      vpc-id: "{{ vpc_info.vpcs[0].vpc_id }}"
  register: subnet_info
  when: ec2_instance_state == "present"

- name: Debug VPC Info
  ansible.builtin.debug:
    var: vpc_info
  when: ec2_instance_state == "present"

- name: Debug subnet ID
  ansible.builtin.debug:
    var: subnet_info.subnets[0].subnet_id
  when: ec2_instance_state == "present"

- name: Create Bastion EC2
  amazon.aws.ec2_instance:
    name: "{{ bastion_instance_name }}"
    key_name: "{{ key }}"
    instance_type: "{{ bastion_instance_type }}"
    image_id: "{{ amazon_linux_2_id }}"
    region: "{{ region }}"
    vpc_subnet_id: "{{ subnet_info.subnets[0].subnet_id }}"
    security_group: "{{ security_group_id }}"
    network:
      assign_public_ip: true
    wait: true
    tags:
      Name: project3-bastion
    state: running
  register: bastion_info
  when: ec2_instance_state == "present"

- name: Wait for Bastion SSH to be available
  ansible.builtin.wait_for:
    host: "{{ bastion_info.instances[0].public_ip_address }}"
    port: 22
    timeout: 60
    state: started
  when:
    - ec2_instance_state == "present"
    - bastion_info is defined
    - bastion_info.instances is defined
    - bastion_info.instances | length > 0

- name: Set correct permission for PEM file before SCP
  ansible.builtin.command:
    cmd: chmod 600 ~/.ssh/project3-key.pem
  delegate_to: localhost
  when: ec2_instance_state == "present"

- name: Copy PEM key to Bastion via SCP
  ansible.builtin.shell: >
    scp -i ~/.ssh/project3-key.pem \
    -o StrictHostKeyChecking=no \
    ~/.ssh/project3-key.pem \
    ubuntu@{{ bastion_info.instances[0].public_ip_address }}:/home/ubuntu/.ssh/project3-key.pem
  register: bastion_key_copy
  become: false
  when:
    - ec2_instance_state == "present"
    - bastion_info is defined
    - bastion_info.instances is defined
    - bastion_info.instances | length > 0

- name: Set permission on PEM key in Bastion EC2
  ansible.builtin.shell: chmod 400 /home/ubuntu/.ssh/project3-key.pem
  become: true
  vars:
    ansible_user: ubuntu
    ansible_ssh_private_key_file: ~/.ssh/project3-key.pem
  delegate_to: "{{ bastion_info.instances[0].public_ip_address }}"
  when:
    - ec2_instance_state == "present"
    - bastion_info is defined
    - bastion_info.instances is defined
    - bastion_info.instances | length > 0

- name: Get Bastion EC2 info for termination
  amazon.aws.ec2_instance_info:
    region: "{{ region }}"
    filters:
      "tag:Name": "{{ bastion_instance_name }}"
  register: bastion_lookup
  when: ec2_instance_state == "absent"

- name: Delete Bastion EC2
  amazon.aws.ec2_instance:
    instance_ids: "{{ bastion_lookup.instances | map(attribute='instance_id') | list }}"
    region: "{{ region }}"
    state: absent
    wait: true
  when:
    - ec2_instance_state == "absent"
    - bastion_lookup is defined
    - bastion_lookup.instances is defined
    - bastion_lookup.instances | length > 0


- name: Print Bastion SSH access info
  ansible.builtin.debug:
    msg: |
      =============================================
      ✅ Bastion EC2 is running and ready
      ➤ Connect with:
        ssh -i ~/.ssh/{{ key }}.pem ubuntu@{{ bastion_info.instances[0].public_ip_address }}
      =============================================
  when:
    - ec2_instance_state == "present"
    - bastion_info is defined
    - bastion_info.instances is defined
    - bastion_info.instances | length > 0
