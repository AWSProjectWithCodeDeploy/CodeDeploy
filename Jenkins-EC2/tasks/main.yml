---

# ✅ 공통: EC2 정보 조회
- name: Get Jenkins EC2 instance info (공통)
  amazon.aws.ec2_instance_info:
    region: "{{ region }}"
    filters:
      tag:Name: "{{ instance_name }}"
      instance-state-name: running
  register: jenkins_ec2_info
  when: EC2_state in ["present", "absent"]

# ▶️ EC2 생성 관련 블럭
- name: Get VPC info
  amazon.aws.ec2_vpc_net_info:
    region: "{{ region }}"
    filters:
      "tag:Name": project3-vpc
  register: vpc_info
  when: EC2_state == "present"

- name: Check VPC info after creation
  amazon.aws.ec2_vpc_subnet_info:
    region: "{{ region }}"
    filters:
      "tag:Name": project3-public-2a
      vpc-id: "{{ vpc_info.vpcs[0].vpc_id }}"
  register: subnet_info
  when: EC2_state == "present"

- name: Debug VPC Info
  ansible.builtin.debug:
    var: vpc_info
  when: EC2_state == "present"

- name: Launch Jenkins EC2 instance
  amazon.aws.ec2_instance:
    user_data: "{{ lookup('file', 'files/user_data.sh') }}"
    name: "{{ instance_name }}"
    key_name: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image_id: "{{ ami_id }}"
    region: "{{ region }}"
    vpc_subnet_id: "{{ subnet_info.subnets[0].subnet_id }}"
    security_groups: "{{ security_groups }}"
    network:
      assign_public_ip: true
    wait: true
    count: 1
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_size: 25
          delete_on_termination: true
          volume_type: gp2
  register: ec2_info
  when: EC2_state == "present"

- name: Debug Jenkins EC2 instance info
  ansible.builtin.debug:
    var: jenkins_ec2_info
  when: EC2_state == "present"

- name: Check Jenkins port 8080 availability
  ansible.builtin.wait_for:
    host: "{{ jenkins_ec2_info.instances[0].public_ip_address }}"
    port: 8080
    state: started
    timeout: 10
  register: wait_jenkins_check
  retries: 18
  delay: 10
  until: wait_jenkins_check.elapsed is defined and wait_jenkins_check.elapsed < 10
  when: EC2_state == "present"

- name: Set fact if Jenkins port is open
  ansible.builtin.set_fact:
    jenkins_ready: true
  when: EC2_state == "present" and wait_jenkins_check.elapsed is defined and wait_jenkins_check.elapsed < 10

- name: Get Jenkins initial admin password via SSH and docker exec
  ansible.builtin.shell: docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
  register: jenkins_password
  delegate_to: "{{ jenkins_ec2_info.instances[0].public_ip_address }}"
  become: true
  vars:
    ansible_user: ubuntu
    ansible_ssh_private_key_file: "{{ lookup('env', 'PEM_KEY_PATH') }}"
  when: EC2_state == "present"

- name: Print Jenkins access info and initial password command
  ansible.builtin.debug:
    msg: |
      =============================================
      ✅ Jenkins is now accessible at:
      http://{{ jenkins_ec2_info.instances[0].public_ip_address }}:8080

      🔐 Initial admin password is:
      {{ jenkins_password.stdout }}

      =============================================
  when:
    - EC2_state == "present"
    - jenkins_ready | default(false)


# 🗑 EC2 삭제 관련 블럭
- name: Get all Elastic IPs
  amazon.aws.ec2_eip_info:
    region: "{{ region }}"
  register: eip_info
  when: EC2_state == "absent"

- name: Release Elastic IP associated with Jenkins
  amazon.aws.ec2_eip:
    public_ip: "{{ jenkins_ec2_info.instances[0].public_ip_address }}"
    region: "{{ region }}"
    state: absent
  when:
    - EC2_state == "absent"
    - jenkins_ec2_info.instances is defined
    - jenkins_ec2_info.instances | length > 0
    - jenkins_ec2_info.instances[0].public_ip_address is defined

- name: Terminate Jenkins EC2 instance
  amazon.aws.ec2_instance:
    instance_ids: "{{ jenkins_ec2_info.instances | map(attribute='instance_id') | list }}"
    region: "{{ region }}"
    state: absent
    wait: true
  when:
    - EC2_state == "absent"
    - jenkins_ec2_info.instances is defined
    - jenkins_ec2_info.instances | length > 0
