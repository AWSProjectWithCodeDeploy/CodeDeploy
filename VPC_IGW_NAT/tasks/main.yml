---
# VPC 정보 조회 (생성 후, 또는 삭제 전)
- name: Get VPC info
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:Name": project3-vpc
    region: "{{ region }}"
  register: vpc_info
  when: vpc_igw_nat_state in ["present", "absent"]

- name: Get public subnet info (project3-public-2a)
  amazon.aws.ec2_vpc_subnet_info:
    filters:
      "tag:Name": project3-public-2a
      vpc-id: "{{ vpc_info.vpcs[0].vpc_id }}"
    region: "{{ region }}"
  register: public_subnet_info
  when: vpc_igw_nat_state in ["present", "absent"]


- name: Create Elastic IP for NAT Gateway
  amazon.aws.ec2_eip:
    region: "{{ region }}"
    in_vpc: true
    state: present
  register: nat_eip
  when: vpc_igw_nat_state == "present"

- name: Create Internet Gateway and attach to VPC
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
    region: "{{ region }}"
    tags:
      Name: project3-igw
    state: present
  when: vpc_igw_nat_state == "present"

- name: Create NAT Gateway in public subnet (ap-northeast-2a)
  amazon.aws.ec2_vpc_nat_gateway:
    subnet_id: "{{  public_subnet_info.subnets[0].id }}"
    allocation_id: "{{ nat_eip.allocation_id }}"
    region: "{{ region }}"
    state: present
    tags:
      Name: project3-nat
  when: vpc_igw_nat_state == "present"

# ------------------- 삭제 작업 -------------------



# 2. Release EIP before deleting NAT Gateway (to avoid dangling EIP)
- name: Release Elastic IPs before deleting NAT Gateway
  amazon.aws.ec2_eip:
    allocation_id: "{{ item.nat_gateway_addresses[0].allocation_id }}"
    region: "{{ region }}"
    state: absent
  loop: "{{ natgw_info.nat_gateways }}"
  when:
    - vpc_igw_nat_state == "absent"
    - natgw_info.nat_gateways is defined
    - natgw_info.nat_gateways | length > 0
    - item.nat_gateway_addresses[0].allocation_id is defined

# 3. Delete NAT Gateway
- name: Delete NAT Gateway
  amazon.aws.ec2_vpc_nat_gateway:
    nat_gateway_id: "{{ item.nat_gateway_id }}"
    region: "{{ region }}"
    state: absent
  loop: "{{ natgw_info.nat_gateways }}"
  when:
    - vpc_igw_nat_state == "absent"
    - natgw_info.nat_gateways is defined
    - natgw_info.nat_gateways | length > 0

# 4. Wait for NAT Gateway deletion
- name: Wait for NAT Gateway deletion
  amazon.aws.ec2_vpc_nat_gateway_info:
    filters:
      subnet-id: "{{ public_subnet_info.subnets[0].id }}"
    region: "{{ region }}"
  register: natgw_wait
  until: natgw_wait.nat_gateways | length == 0
  retries: 40
  delay: 15
  when:
    - vpc_igw_nat_state == "absent"
    - natgw_info.nat_gateways is defined
    - natgw_info.nat_gateways | length > 0

- name: Get Internet Gateway info
  amazon.aws.ec2_vpc_igw_info:
    filters:
      attachment.vpc-id: "{{ vpc_info.vpcs[0].vpc_id }}"
    region: "{{ region }}"
  register: igw_info
  when: vpc_igw_nat_state == "absent"

# 6. Detach IGW from VPC
- name: Detach IGW from VPC
  amazon.aws.ec2_vpc_igw:
    internet_gateway_id: "{{ igw_info.internet_gateways[0].internet_gateway_id }}"
    region: "{{ region }}"
    state: absent
  loop: "{{ igw_info.internet_gateways }}"
  when:
    - vpc_igw_nat_state == "absent"
    - igw_info.internet_gateways is defined
    - igw_info.internet_gateways | length > 0